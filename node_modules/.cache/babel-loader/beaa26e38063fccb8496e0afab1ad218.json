{"ast":null,"code":"var _jsxFileName = \"/home/aslambeq/skills/my-app/src/components/Common/Paginator/Paginator.jsx\";\nimport React, { useState } from 'react';\nimport styles from './Paginator.module.css';\n\nlet Paginator = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  portionSize = 10\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.pages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"PREV\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: currentPage === p && styles.selectedPage,\n      onClick: e => {\n        onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"NEXT\"));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/home/aslambeq/skills/my-app/src/components/Common/Paginator/Paginator.jsx"],"names":["React","useState","styles","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","map","selectedPage","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,IAAIC,SAAS,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,WAA7B;AAA0CC,EAAAA,aAA1C;AAAyDC,EAAAA,WAAW,GAAG;AAAvE,CAAD,KAAiF;AAC7F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AAEA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;AACA,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIiB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACU,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,aAAa,GAAG,CAAhB,iBACG;AACI,IAAA,OAAO,EAAE,MAAM;AACXC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAUKJ,KAAK,CACDQ,MADJ,CACYC,CAAD,IAAOA,CAAC,IAAIH,qBAAL,IAA8BG,CAAC,IAAIF,sBADrD,EAEIG,GAFJ,CAESD,CAAD,IAAO;AACR,wBACI;AACI,MAAA,SAAS,EAAEf,WAAW,KAAKe,CAAhB,IAAqBnB,MAAM,CAACqB,YAD3C;AAEI,MAAA,OAAO,EAAGC,CAAD,IAAO;AACZjB,QAAAA,aAAa,CAACc,CAAD,CAAb;AACH,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKA,CANL,CADJ;AAUH,GAbJ,CAVL,EAwBKN,YAAY,GAAGC,aAAf,iBACG;AACI,IAAA,OAAO,EAAE,MAAM;AACXC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBR,CADJ;AAoCH,CAjDD;;AAmDA,eAAeb,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport styles from './Paginator.module.css'\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={styles.pages}>\r\n            {portionNumber > 1 && (\r\n                <button\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber - 1)\r\n                    }}\r\n                >\r\n                    PREV\r\n                </button>\r\n            )}\r\n            {pages\r\n                .filter((p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return (\r\n                        <span\r\n                            className={currentPage === p && styles.selectedPage}\r\n                            onClick={(e) => {\r\n                                onPageChanged(p)\r\n                            }}\r\n                        >\r\n                            {p}\r\n                        </span>\r\n                    )\r\n                })}\r\n            {portionCount > portionNumber && (\r\n                <button\r\n                    onClick={() => {\r\n                        setPortionNumber(portionNumber + 1)\r\n                    }}\r\n                >\r\n                    NEXT\r\n                </button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator\r\n"]},"metadata":{},"sourceType":"module"}