{"ast":null,"code":"import _regeneratorRuntime from\"/home/aslambeq/skills/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/aslambeq/skills/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/aslambeq/skills/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{authAPI}from'../api/api';import{stopSubmit}from'redux-form';var SET_USER_DATA='samurai-network/auth/SET_USER_DATA';var initialState={id:null,email:null,login:null,isAuth:false};var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_USER_DATA:return _objectSpread(_objectSpread({},state),action.payload);default:return state;}};// thunk creators (// return (promise) )\nexport var setAuthUserData=function setAuthUserData(id,email,login,isAuth){return{type:SET_USER_DATA,payload:{id:id,email:email,login:login,isAuth:isAuth}};};export var getAuthUserData=function getAuthUserData(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,_response$data$data,id,email,_login;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return authAPI.me();case 2:response=_context.sent;if(response.data.resultCode===0){_response$data$data=response.data.data,id=_response$data$data.id,email=_response$data$data.email,_login=_response$data$data.login;dispatch(setAuthUserData(id,email,_login,true));}case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var login=function login(email,password,rememberMe){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response,message;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return authAPI.login(email,password,rememberMe);case 2:response=_context2.sent;if(response.data.resultCode===0){dispatch(getAuthUserData());}else{message=response.data.messages.length>0?response.data.messages[0]:'err0r';dispatch(stopSubmit('login',{_error:message}));}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var logout=function logout(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return authAPI.logout();case 2:response=_context3.sent;if(response.data.resultCode===0){dispatch(setAuthUserData(null,null,null,false));}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export default authReducer;","map":{"version":3,"sources":["/home/aslambeq/skills/my-app/src/redux/auth-reducer.js"],"names":["authAPI","stopSubmit","SET_USER_DATA","initialState","id","email","login","isAuth","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","me","response","data","resultCode","password","rememberMe","message","messages","length","_error","logout"],"mappings":"qbAAA,OAASA,OAAT,KAAwB,YAAxB,CACA,OAASC,UAAT,KAA2B,YAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,oCAAtB,CAEA,GAAIC,CAAAA,YAAY,CAAG,CACfC,EAAE,CAAE,IADW,CAEfC,KAAK,CAAE,IAFQ,CAGfC,KAAK,CAAE,IAHQ,CAIfC,MAAM,CAAE,KAJO,CAAnB,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBN,YAAyB,IAAXO,CAAAA,MAAW,2CAClD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKT,CAAAA,aAAL,CACI,sCACOO,KADP,EAEOC,MAAM,CAACE,OAFd,EAKJ,QACI,MAAOH,CAAAA,KAAP,CARR,CAUH,CAXD,CAaA;AAEA,MAAO,IAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACT,EAAD,CAAKC,KAAL,CAAYC,KAAZ,CAAmBC,MAAnB,QAA+B,CAC1DI,IAAI,CAAET,aADoD,CAE1DU,OAAO,CAAE,CAAER,EAAE,CAAFA,EAAF,CAAMC,KAAK,CAALA,KAAN,CAAaC,KAAK,CAALA,KAAb,CAAoBC,MAAM,CAANA,MAApB,CAFiD,CAA/B,EAAxB,CAKP,MAAO,IAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,kGAAM,iBAAOC,QAAP,yLACVf,CAAAA,OAAO,CAACgB,EAAR,EADU,QAC3BC,QAD2B,eAEjC,GAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,GAA6B,CAAjC,CAAoC,qBACLF,QAAQ,CAACC,IAAT,CAAcA,IADT,CAC1Bd,EAD0B,qBAC1BA,EAD0B,CACtBC,KADsB,qBACtBA,KADsB,CACfC,MADe,qBACfA,KADe,CAEhCS,QAAQ,CAACF,eAAe,CAACT,EAAD,CAAKC,KAAL,CAAYC,MAAZ,CAAmB,IAAnB,CAAhB,CAAR,CACH,CALgC,sDAAN,gEAAxB,CAQP,MAAO,IAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACD,KAAD,CAAQe,QAAR,CAAkBC,UAAlB,kGAAiC,kBAAON,QAAP,kKAC3Bf,CAAAA,OAAO,CAACM,KAAR,CAAcD,KAAd,CAAqBe,QAArB,CAA+BC,UAA/B,CAD2B,QAC5CJ,QAD4C,gBAElD,GAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,GAA6B,CAAjC,CAAoC,CAChCJ,QAAQ,CAACD,eAAe,EAAhB,CAAR,CACH,CAFD,IAEO,CACCQ,OADD,CACWL,QAAQ,CAACC,IAAT,CAAcK,QAAd,CAAuBC,MAAvB,CAAgC,CAAhC,CAAoCP,QAAQ,CAACC,IAAT,CAAcK,QAAd,CAAuB,CAAvB,CAApC,CAAgE,OAD3E,CAEHR,QAAQ,CAACd,UAAU,CAAC,OAAD,CAAU,CAAEwB,MAAM,CAAEH,OAAV,CAAV,CAAX,CAAR,CACH,CAPiD,wDAAjC,kEAAd,CAUP,MAAO,IAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,mGAAM,kBAAOX,QAAP,0JACDf,CAAAA,OAAO,CAAC0B,MAAR,EADC,QAClBT,QADkB,gBAExB,GAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,GAA6B,CAAjC,CAAoC,CAChCJ,QAAQ,CAACF,eAAe,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,KAAnB,CAAhB,CAAR,CACH,CAJuB,wDAAN,kEAAf,CAOP,cAAeL,CAAAA,WAAf","sourcesContent":["import { authAPI } from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// thunk creators (// return (promise) )\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: { id, email, login, isAuth }\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'err0r'\r\n        dispatch(stopSubmit('login', { _error: message }))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n"]},"metadata":{},"sourceType":"module"}