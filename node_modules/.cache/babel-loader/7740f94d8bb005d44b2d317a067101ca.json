{"ast":null,"code":"import React from'react';import{addPostActionCreator,updateNewPostTextActionCreator}from'../../../redux/profile-reducer';import MyPosts from'./MyPosts';import{connect}from'react-redux';/* const MyPostsContainer = (props) => {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {(store) => {\r\n                let state = store.getState()\r\n\r\n                let addPost = () => {\r\n                    store.dispatch(addPostActionCreator())\r\n                }\r\n\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text)\r\n                    store.dispatch(action)\r\n                }\r\n\r\n                return <MyPosts\r\n                    updateNewPostText={onPostChange}\r\n                    addPost={addPost}\r\n                    posts={state.profilePage.postData}\r\n                    newPostText={state.profilePage.newPostText}\r\n                />\r\n            }}\r\n        </StoreContext.Consumer>\r\n    )\r\n} */var mapStateToProps=function mapStateToProps(state){return{posts:state.profilePage.postData,newPostText:state.profilePage.newPostText};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addPost:function addPost(newPostText){dispatch(addPostActionCreator(newPostText));}};};var MyPostsContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts);export default MyPostsContainer;","map":{"version":3,"sources":["/home/aslambeq/skills/my-app/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"names":["React","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","connect","mapStateToProps","state","posts","profilePage","postData","newPostText","mapDispatchToProps","dispatch","addPost","MyPostsContainer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,oBADJ,CAEIC,8BAFJ,KAGO,gCAHP,CAIA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA;;;;;;;;;;;;;;;;;;;;;;;;;IA2BA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHC,KAAK,CAAED,KAAK,CAACE,WAAN,CAAkBC,QADtB,CAEHC,WAAW,CAAEJ,KAAK,CAACE,WAAN,CAAkBE,WAF5B,CAAP,CAIH,CALD,CAOA,GAAIC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACnC,MAAO,CACHC,OAAO,CAAE,iBAACH,WAAD,CAAiB,CACtBE,QAAQ,CAACX,oBAAoB,CAACS,WAAD,CAArB,CAAR,CACH,CAHE,CAAP,CAKH,CAND,CAQA,GAAMI,CAAAA,gBAAgB,CAAGV,OAAO,CAACC,eAAD,CAAkBM,kBAAlB,CAAP,CAA6CR,OAA7C,CAAzB,CAEA,cAAeW,CAAAA,gBAAf","sourcesContent":["import React from 'react'\r\nimport {\r\n    addPostActionCreator,\r\n    updateNewPostTextActionCreator,\r\n} from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\n\r\n/* const MyPostsContainer = (props) => {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {(store) => {\r\n                let state = store.getState()\r\n\r\n                let addPost = () => {\r\n                    store.dispatch(addPostActionCreator())\r\n                }\r\n\r\n                let onPostChange = (text) => {\r\n                    let action = updateNewPostTextActionCreator(text)\r\n                    store.dispatch(action)\r\n                }\r\n\r\n                return <MyPosts\r\n                    updateNewPostText={onPostChange}\r\n                    addPost={addPost}\r\n                    posts={state.profilePage.postData}\r\n                    newPostText={state.profilePage.newPostText}\r\n                />\r\n            }}\r\n        </StoreContext.Consumer>\r\n    )\r\n} */\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n"]},"metadata":{},"sourceType":"module"}