{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.count\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccessAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccessAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage: currentPage\n}); // currentPage == currentPage: currentPage\n\nexport const setTotalUsersCountAC = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetchingAC = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgressAC = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsersThunkCreator = (requestedPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetchingAC(true));\n    dispatch(setCurrentPageAC(requestedPage));\n    usersAPI.getUsers(requestedPage, pageSize).then(data => {\n      dispatch(toggleIsFetchingAC(false));\n      dispatch(setUsersAC(data.items));\n      dispatch(setTotalUsersCountAC(data.totalCount));\n    });\n  };\n};\nexport const follow = userId => {\n  return dispatch => {\n    dispatch(toggleFollowingProgressAC(true, userId));\n    usersAPI.follow(userId).then(response => {\n      if (response.data.resultCode == 0) {\n        dispatch(followSuccessAC(userId));\n      }\n\n      dispatch(toggleFollowingProgressAC(false, userId));\n    });\n  };\n};\nexport const unfollow = userId => {\n  return dispatch => {\n    dispatch(toggleFollowingProgressAC(true, userId));\n    usersAPI.unfollow(userId).then(response => {\n      if (response.data.resultCode == 0) {\n        dispatch(unfollowSuccessAC(userId));\n      }\n\n      dispatch(toggleFollowingProgressAC(false, userId));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/home/aslambeq/skills/my-app/src/redux/users-reducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","count","filter","followSuccessAC","unfollowSuccessAC","setUsersAC","setCurrentPageAC","setTotalUsersCountAC","toggleIsFetchingAC","toggleFollowingProgressAC","getUsersThunkCreator","requestedPage","dispatch","getUsers","then","data","items","totalCount","follow","response","resultCode","unfollow"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AAEA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,4BAA4B,GAAG,8BAArC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,QAAQ,EAAE,CAFK;AAGfC,EAAAA,eAAe,EAAE,CAHF;AAIfC,EAAAA,WAAW,EAAE,CAJE;AAKfC,EAAAA,UAAU,EAAE,IALG;AAMfC,EAAAA,mBAAmB,EAAE;AANN,CAAnB;;AAUA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,MAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAE,GAAGF,CAAL;AAAQG,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKlB,QAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAE,GAAGF,CAAL;AAAQG,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKjB,SAAL;AAAgB;AACZ,eAAO,EACH,GAAGa,KADA;AAEHP,UAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFX,SAAP;AAIH;;AACD,SAAKL,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGY,KADA;AAEHJ,UAAAA,WAAW,EAAEK,MAAM,CAACL;AAFjB,SAAP;AAIH;;AACD,SAAKP,qBAAL;AAA4B;AACxB,eAAO,EACH,GAAGW,KADA;AAEHL,UAAAA,eAAe,EAAEM,MAAM,CAACO;AAFrB,SAAP;AAIH;;AACD,SAAKlB,kBAAL;AAAyB;AACrB,eAAO,EACH,GAAGU,KADA;AAEHH,UAAAA,UAAU,EAAEI,MAAM,CAACJ;AAFhB,SAAP;AAIH;;AACD,SAAKN,4BAAL;AAAmC;AAC/B,eAAO,EACH,GAAGS,KADA;AAEHF,UAAAA,mBAAmB,EAAEG,MAAM,CAACJ,UAAP,GACf,CAAC,GAAGG,KAAK,CAACF,mBAAV,EAA+BG,MAAM,CAACK,MAAtC,CADe,GAEfN,KAAK,CAACF,mBAAN,CAA0BW,MAA1B,CAAiCJ,EAAE,IAAIA,EAAE,IAAIJ,MAAM,CAACK,MAApD;AAJH,SAAP;AAMH;;AACD;AACI,aAAON,KAAP;AAtDR;AAwDH,CAzDD;;AA2DA,OAAO,MAAMU,eAAe,GAAIJ,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAEjB,MAAR;AAAgBqB,EAAAA;AAAhB,CAAb,CAAxB;AACP,OAAO,MAAMK,iBAAiB,GAAIL,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAEhB,QAAR;AAAkBoB,EAAAA;AAAlB,CAAb,CAA1B;AACP,OAAO,MAAMM,UAAU,GAAInB,KAAD,KAAY;AAAES,EAAAA,IAAI,EAAEf,SAAR;AAAmBM,EAAAA;AAAnB,CAAZ,CAAnB;AACP,OAAO,MAAMoB,gBAAgB,GAAIjB,WAAD,KAAkB;AAAEM,EAAAA,IAAI,EAAEd,gBAAR;AAA0BQ,EAAAA,WAAW,EAAEA;AAAvC,CAAlB,CAAzB,C,CAAiG;;AACxG,OAAO,MAAMkB,oBAAoB,GAAInB,eAAD,KAAsB;AAAEO,EAAAA,IAAI,EAAEb,qBAAR;AAA+BmB,EAAAA,KAAK,EAAEb;AAAtC,CAAtB,CAA7B;AACP,OAAO,MAAMoB,kBAAkB,GAAIlB,UAAD,KAAiB;AAAEK,EAAAA,IAAI,EAAEZ,kBAAR;AAA4BO,EAAAA;AAA5B,CAAjB,CAA3B;AACP,OAAO,MAAMmB,yBAAyB,GAAG,CAACnB,UAAD,EAAaS,MAAb,MAAyB;AAAEJ,EAAAA,IAAI,EAAEX,4BAAR;AAAsCM,EAAAA,UAAtC;AAAkDS,EAAAA;AAAlD,CAAzB,CAAlC;AAGP,OAAO,MAAMW,oBAAoB,GAAG,CAACC,aAAD,EAAgBxB,QAAhB,KAA6B;AAC7D,SAAQyB,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACJ,kBAAkB,CAAC,IAAD,CAAnB,CAAR;AACAI,IAAAA,QAAQ,CAACN,gBAAgB,CAACK,aAAD,CAAjB,CAAR;AAEAlC,IAAAA,QAAQ,CAACoC,QAAT,CAAkBF,aAAlB,EAAiCxB,QAAjC,EACK2B,IADL,CACUC,IAAI,IAAI;AACVH,MAAAA,QAAQ,CAACJ,kBAAkB,CAAC,KAAD,CAAnB,CAAR;AACAI,MAAAA,QAAQ,CAACP,UAAU,CAACU,IAAI,CAACC,KAAN,CAAX,CAAR;AACAJ,MAAAA,QAAQ,CAACL,oBAAoB,CAACQ,IAAI,CAACE,UAAN,CAArB,CAAR;AACH,KALL;AAMH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMC,MAAM,GAAInB,MAAD,IAAY;AAC9B,SAAQa,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACH,yBAAyB,CAAC,IAAD,EAAOV,MAAP,CAA1B,CAAR;AAEAtB,IAAAA,QAAQ,CAACyC,MAAT,CAAgBnB,MAAhB,EACKe,IADL,CACUK,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACJ,IAAT,CAAcK,UAAd,IAA4B,CAAhC,EAAmC;AAC/BR,QAAAA,QAAQ,CAACT,eAAe,CAACJ,MAAD,CAAhB,CAAR;AACH;;AACDa,MAAAA,QAAQ,CAACH,yBAAyB,CAAC,KAAD,EAAQV,MAAR,CAA1B,CAAR;AACH,KANL;AAOH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMsB,QAAQ,GAAItB,MAAD,IAAY;AAChC,SAAQa,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACH,yBAAyB,CAAC,IAAD,EAAOV,MAAP,CAA1B,CAAR;AAEAtB,IAAAA,QAAQ,CAAC4C,QAAT,CAAkBtB,MAAlB,EACKe,IADL,CACUK,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACJ,IAAT,CAAcK,UAAd,IAA4B,CAAhC,EAAmC;AAC/BR,QAAAA,QAAQ,CAACR,iBAAiB,CAACL,MAAD,CAAlB,CAAR;AACH;;AACDa,MAAAA,QAAQ,CAACH,yBAAyB,CAAC,KAAD,EAAQV,MAAR,CAA1B,CAAR;AACH,KANL;AAOH,GAVD;AAWH,CAZM;AAgBP,eAAeP,YAAf","sourcesContent":["import { usersAPI } from \"../api/api\"\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccessAC = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccessAC = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsersAC = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPageAC = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage: currentPage }) // currentPage == currentPage: currentPage\r\nexport const setTotalUsersCountAC = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetchingAC = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgressAC = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\n\r\nexport const getUsersThunkCreator = (requestedPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetchingAC(true))\r\n        dispatch(setCurrentPageAC(requestedPage))\r\n\r\n        usersAPI.getUsers(requestedPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetchingAC(false))\r\n                dispatch(setUsersAC(data.items))\r\n                dispatch(setTotalUsersCountAC(data.totalCount))\r\n            })\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgressAC(true, userId))\r\n\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccessAC(userId))\r\n                }\r\n                dispatch(toggleFollowingProgressAC(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgressAC(true, userId))\r\n\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccessAC(userId))\r\n                }\r\n                dispatch(toggleFollowingProgressAC(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}