{"ast":null,"code":"import { usersAPI, profileAPI } from '../api/api';\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nlet initialState = {\n  postData: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 0\n  }, {\n    id: 2,\n    message: \"It's my first post\",\n    likesCount: 10\n  }, {\n    id: 3,\n    message: 'Lorem Ipsum is simply dummy text...',\n    likesCount: 42\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          postData: [...state.postData, newPost],\n          newPostText: ''\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\nexport const setStatus = status => {\n  return {\n    type: SET_STATUS,\n    status\n  };\n};\nexport const getUserProfile = userId => dispatch => {\n  usersAPI.getProfile(userId).then(response => {\n    dispatch(setUserProfile(response.data));\n  });\n};\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    dispatch(setStatus(response.data));\n  });\n};\nexport const updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/home/aslambeq/skills/my-app/src/redux/profile-reducer.js"],"names":["usersAPI","profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","postData","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostText","addPostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","then","response","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import { usersAPI, profileAPI } from '../api/api'\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nconst SET_STATUS = 'SET-STATUS'\r\n\r\nlet initialState = {\r\n    postData: [\r\n        { id: 1, message: 'Hi, how are you?', likesCount: 0 },\r\n        { id: 2, message: \"It's my first post\", likesCount: 10 },\r\n        { id: 3, message: 'Lorem Ipsum is simply dummy text...', likesCount: 42 },\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            }\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n                newPostText: '',\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText,\r\n})\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return { type: SET_USER_PROFILE, profile }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return { type: SET_STATUS, status }\r\n}\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then((response) => {\r\n        dispatch(setUserProfile(response.data))\r\n    })\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId).then((response) => {\r\n        dispatch(setStatus(response.data))\r\n    })\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status).then((response) => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    })\r\n}\r\n\r\nexport default profileReducer\r\n"]},"metadata":{},"sourceType":"module"}