{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{Redirect}from'react-router-dom';import{Field,reduxForm}from'redux-form';import{login}from'../../redux/auth-reducer';import{requiredField}from'../../utils/validators/validators';import{Input,createField}from'../Common/FormsControls/FormsControls';import styles from'../Common/FormsControls/FormsControls.module.css';var LoginForm=function LoginForm(_ref){var handleSubmit=_ref.handleSubmit,error=_ref.error;return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},createField('email','Email',[requiredField],Input,null),createField('password','password',[requiredField],Input,'password'),createField('rememberMe',null,null,Input,'checkbox','remember me'),error&&/*#__PURE__*/React.createElement(\"div\",{className:styles.formSummaryError},error),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Login\")));};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var Login=function Login(props){var onSubmitFunction=function onSubmitFunction(formData){props.login(formData.email,formData.password,formData.remebmerMe);};if(props.isAuth){return/*#__PURE__*/React.createElement(Redirect,{to:\"/profile\"});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Login\"),/*#__PURE__*/React.createElement(LoginReduxForm,{onSubmit:onSubmitFunction}));};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);// mapDispatchToProps\n// {login: loginTC} == {login}\n// loginTC - thunk creator\n// login - wrapper","map":{"version":3,"sources":["/home/aslambeq/skills/my-app/src/components/Login/Login.jsx"],"names":["React","connect","Redirect","Field","reduxForm","login","requiredField","Input","createField","styles","LoginForm","handleSubmit","error","formSummaryError","LoginReduxForm","form","Login","props","onSubmitFunction","formData","email","password","remebmerMe","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,OAASC,aAAT,KAA8B,mCAA9B,CACA,OAASC,KAAT,CAAgBC,WAAhB,KAAmC,uCAAnC,CACA,MAAOC,CAAAA,MAAP,KAAmB,kDAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA6B,IAA1BC,CAAAA,YAA0B,MAA1BA,YAA0B,CAAZC,KAAY,MAAZA,KAAY,CAC3C,mBACI,4BAAM,QAAQ,CAAED,YAAhB,EACKH,WAAW,CAAC,OAAD,CAAU,OAAV,CAAmB,CAACF,aAAD,CAAnB,CAAoCC,KAApC,CAA2C,IAA3C,CADhB,CAEKC,WAAW,CAAC,UAAD,CAAa,UAAb,CAAyB,CAACF,aAAD,CAAzB,CAA0CC,KAA1C,CAAiD,UAAjD,CAFhB,CAGKC,WAAW,CAAC,YAAD,CAAe,IAAf,CAAqB,IAArB,CAA2BD,KAA3B,CAAkC,UAAlC,CAA8C,aAA9C,CAHhB,CAKKK,KAAK,eAAI,2BAAK,SAAS,CAAEH,MAAM,CAACI,gBAAvB,EAA0CD,KAA1C,CALd,cAMI,4CACI,8BAAQ,IAAI,CAAC,QAAb,UADJ,CANJ,CADJ,CAYH,CAbD,CAeA,GAAME,CAAAA,cAAc,CAAGV,SAAS,CAAC,CAAEW,IAAI,CAAE,OAAR,CAAD,CAAT,CAA6BL,SAA7B,CAAvB,CAEA,GAAMM,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,QAAD,CAAc,CACnCF,KAAK,CAACZ,KAAN,CAAYc,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,UAAxD,EACH,CAFD,CAIA,GAAIL,KAAK,CAACM,MAAV,CAAkB,CACd,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,UAAb,EAAP,CACH,CAED,mBACI,4CACI,sCADJ,cAEI,oBAAC,cAAD,EAAgB,QAAQ,CAAEL,gBAA1B,EAFJ,CADJ,CAMH,CAfD,CAiBA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADa,CAAZ,EAAxB,CAIA,cAAetB,CAAAA,OAAO,CAACuB,eAAD,CAAkB,CAAEnB,KAAK,CAAEA,KAAT,CAAlB,CAAP,CAA2CW,KAA3C,CAAf,CAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { requiredField } from '../../utils/validators/validators'\r\nimport { Input, createField } from '../Common/FormsControls/FormsControls'\r\nimport styles from '../Common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('email', 'Email', [requiredField], Input, null)}\r\n            {createField('password', 'password', [requiredField], Input, 'password')}\r\n            {createField('rememberMe', null, null, Input, 'checkbox', 'remember me')}\r\n\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button type='submit'>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmitFunction = (formData) => {\r\n        props.login(formData.email, formData.password, formData.remebmerMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmitFunction} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login: login })(Login)\r\n\r\n// mapDispatchToProps\r\n// {login: loginTC} == {login}\r\n// loginTC - thunk creator\r\n// login - wrapper\r\n"]},"metadata":{},"sourceType":"module"}