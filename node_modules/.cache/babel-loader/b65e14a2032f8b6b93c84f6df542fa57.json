{"ast":null,"code":"var _jsxFileName = \"/home/aslambeq/skills/my-app/src/components/Profile/MyPosts/MyPosts.jsx\";\nimport React, { PureComponent } from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { requiredField, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\n/* const MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map((post) => (\r\n        <Post message={post.message} likesCount={post.likesCount} />\r\n    ))\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>{postsElements}</div>\r\n        </div>\r\n    )\r\n} */\n\nclass MyPosts extends PureComponent {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps != this.props || nextState != this.state;\n  }\n\n  render() {\n    let postsElements = this.props.posts.map(post => /*#__PURE__*/React.createElement(Post, {\n      message: post.message,\n      likesCount: post.likesCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }));\n\n    let onAddPost = values => {\n      this.props.addPost(values.newPostText);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: s.postsBlock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"My posts\"), /*#__PURE__*/React.createElement(AddNewPostFormRedux, {\n      onSubmit: onAddPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: s.posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, postsElements));\n  }\n\n}\n\nconst maxLength15 = maxLengthCreator(15);\n\nconst AddNewPostForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    placeholder: \"What's on your mind?\",\n    name: 'newPostText',\n    component: Textarea,\n    validate: [requiredField, maxLength15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Add post\")));\n};\n\nconst AddNewPostFormRedux = reduxForm({\n  form: 'ProfileAddNewPostForm'\n})(AddNewPostForm);\nexport default MyPosts;","map":{"version":3,"sources":["/home/aslambeq/skills/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","PureComponent","s","Post","Field","reduxForm","requiredField","maxLengthCreator","Textarea","MyPosts","shouldComponentUpdate","nextProps","nextState","props","state","render","postsElements","posts","map","post","message","likesCount","onAddPost","values","addPost","newPostText","postsBlock","maxLength15","AddNewPostForm","handleSubmit","AddNewPostFormRedux","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SACIC,aADJ,EAEIC,gBAFJ,QAGO,sCAHP;AAIA,SAASC,QAAT,QAAyB,0CAAzB;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,OAAN,SAAsBR,aAAtB,CAAoC;AAChCS,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,WAAOD,SAAS,IAAI,KAAKE,KAAlB,IAA2BD,SAAS,IAAI,KAAKE,KAApD;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,aAAa,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,iBACrC,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAEA,IAAI,CAACC,OAApB;AAA6B,MAAA,UAAU,EAAED,IAAI,CAACE,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB,CAApB;;AAIA,QAAIC,SAAS,GAAIC,MAAD,IAAY;AACxB,WAAKV,KAAL,CAAWW,OAAX,CAAmBD,MAAM,CAACE,WAA1B;AACH,KAFD;;AAIA,wBACI;AAAK,MAAA,SAAS,EAAEvB,CAAC,CAACwB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,mBAAD;AAAqB,MAAA,QAAQ,EAAEJ,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAEpB,CAAC,CAACe,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BD,aAA1B,CAHJ,CADJ;AAOH;;AArB+B;;AAwBpC,MAAMW,WAAW,GAAGpB,gBAAgB,CAAC,EAAD,CAApC;;AAEA,MAAMqB,cAAc,GAAIf,KAAD,IAAW;AAC9B,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACgB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAE,sBADjB;AAEI,IAAA,IAAI,EAAE,aAFV;AAGI,IAAA,SAAS,EAAErB,QAHf;AAII,IAAA,QAAQ,EAAE,CAACF,aAAD,EAAgBqB,WAAhB,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CATJ,CADJ;AAeH,CAhBD;;AAkBA,MAAMG,mBAAmB,GAAGzB,SAAS,CAAC;AAAE0B,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAT,CACxBH,cADwB,CAA5B;AAIA,eAAenB,OAAf","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {\r\n    requiredField,\r\n    maxLengthCreator,\r\n} from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls'\r\n\r\n/* const MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map((post) => (\r\n        <Post message={post.message} likesCount={post.likesCount} />\r\n    ))\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>{postsElements}</div>\r\n        </div>\r\n    )\r\n} */\r\n\r\nclass MyPosts extends PureComponent {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps != this.props || nextState != this.state\r\n    }\r\n\r\n    render() {\r\n        let postsElements = this.props.posts.map((post) => (\r\n            <Post message={post.message} likesCount={post.likesCount} />\r\n        ))\r\n\r\n        let onAddPost = (values) => {\r\n            this.props.addPost(values.newPostText)\r\n        }\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n                <div className={s.posts}>{postsElements}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst maxLength15 = maxLengthCreator(15)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={\"What's on your mind?\"}\r\n                    name={'newPostText'}\r\n                    component={Textarea}\r\n                    validate={[requiredField, maxLength15]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(\r\n    AddNewPostForm\r\n)\r\n\r\nexport default MyPosts\r\n"]},"metadata":{},"sourceType":"module"}