{"ast":null,"code":"import { usersAPI, profileAPI } from '../api/api';\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst DELETE_POST = 'DELETE-POST';\nlet initialState = {\n  postData: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 0\n  }, {\n    id: 2,\n    message: \"It's my first post\",\n    likesCount: 10\n  }, {\n    id: 3,\n    message: 'Lorem Ipsum is simply dummy text...',\n    likesCount: 42\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          postData: [...state.postData, newPost],\n          newPostText: ''\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          postData: state.postData.filter(p => p.id != action.postId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const deletePostActionCreator = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\nexport const setStatus = status => {\n  return {\n    type: SET_STATUS,\n    status\n  };\n};\nexport const getUserProfile = userId => async dispatch => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  const response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  const response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport default profileReducer; // in response - result to resolve promise","map":{"version":3,"sources":["/home/aslambeq/skills/my-app/src/redux/profile-reducer.js"],"names":["usersAPI","profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","postData","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","newPostText","filter","p","postId","addPostActionCreator","deletePostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","response","getProfile","data","getStatus","updateStatus","resultCode"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,YAArC;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,CACN;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,kBAAlB;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GADM,EAEN;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,oBAAlB;AAAwCC,IAAAA,UAAU,EAAE;AAApD,GAFM,EAGN;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,qCAAlB;AAAyDC,IAAAA,UAAU,EAAE;AAArE,GAHM,CADK;AAMfC,EAAAA,OAAO,EAAE,IANM;AAOfC,EAAAA,MAAM,EAAE;AAPO,CAAnB;;AAUA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,QAAL;AAAe;AACX,YAAIe,OAAO,GAAG;AACVT,UAAAA,EAAE,EAAE,CADM;AAEVC,UAAAA,OAAO,EAAEM,MAAM,CAACG,WAFN;AAGVR,UAAAA,UAAU,EAAE;AAHF,SAAd;AAKA,eAAO,EACH,GAAGI,KADA;AAEHP,UAAAA,QAAQ,EAAE,CAAC,GAAGO,KAAK,CAACP,QAAV,EAAoBU,OAApB,CAFP;AAGHC,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKH;;AACD,SAAKd,UAAL;AAAiB;AACb,eAAO,EACH,GAAGU,KADA;AAEHF,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAFZ,SAAP;AAIH;;AACD,SAAKT,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGW,KADA;AAEHH,UAAAA,OAAO,EAAEI,MAAM,CAACJ;AAFb,SAAP;AAIH;;AACD,SAAKN,WAAL;AAAkB;AACd,eAAO,EAAE,GAAGS,KAAL;AAAYP,UAAAA,QAAQ,EAAEO,KAAK,CAACP,QAAN,CAAeY,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACZ,EAAF,IAAQO,MAAM,CAACM,MAA5C;AAAtB,SAAP;AACH;;AACD;AACI,aAAOP,KAAP;AA7BR;AA+BH,CAhCD;;AAkCA,OAAO,MAAMQ,oBAAoB,GAAIJ,WAAD,KAAkB;AAClDF,EAAAA,IAAI,EAAEd,QAD4C;AAElDgB,EAAAA;AAFkD,CAAlB,CAA7B;AAIP,OAAO,MAAMK,uBAAuB,GAAIF,MAAD,KAAa;AAChDL,EAAAA,IAAI,EAAEX,WAD0C;AAEhDgB,EAAAA;AAFgD,CAAb,CAAhC;AAKP,OAAO,MAAMG,cAAc,GAAIb,OAAD,IAAa;AACvC,SAAO;AAAEK,IAAAA,IAAI,EAAEb,gBAAR;AAA0BQ,IAAAA;AAA1B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMc,SAAS,GAAIb,MAAD,IAAY;AACjC,SAAO;AAAEI,IAAAA,IAAI,EAAEZ,UAAR;AAAoBQ,IAAAA;AAApB,GAAP;AACH,CAFM;AAIP,OAAO,MAAMc,cAAc,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,QAAQ,GAAG,MAAM7B,QAAQ,CAAC8B,UAAT,CAAoBH,MAApB,CAAvB;AACAC,EAAAA,QAAQ,CAACJ,cAAc,CAACK,QAAQ,CAACE,IAAV,CAAf,CAAR;AACH,CAHM;AAKP,OAAO,MAAMC,SAAS,GAAIL,MAAD,IAAY,MAAOC,QAAP,IAAoB;AACrD,QAAMC,QAAQ,GAAG,MAAM5B,UAAU,CAAC+B,SAAX,CAAqBL,MAArB,CAAvB;AACAC,EAAAA,QAAQ,CAACH,SAAS,CAACI,QAAQ,CAACE,IAAV,CAAV,CAAR;AACH,CAHM;AAKP,OAAO,MAAME,YAAY,GAAIrB,MAAD,IAAY,MAAOgB,QAAP,IAAoB;AACxD,QAAMC,QAAQ,GAAG,MAAM5B,UAAU,CAACgC,YAAX,CAAwBrB,MAAxB,CAAvB;;AACI,MAAIiB,QAAQ,CAACE,IAAT,CAAcG,UAAd,KAA6B,CAAjC,EAAoC;AAChCN,IAAAA,QAAQ,CAACH,SAAS,CAACb,MAAD,CAAV,CAAR;AACH;AACR,CALM;AAOP,eAAeC,cAAf,C,CAEA","sourcesContent":["import { usersAPI, profileAPI } from '../api/api'\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nconst SET_STATUS = 'SET-STATUS'\r\nconst DELETE_POST = 'DELETE-POST'\r\n\r\nlet initialState = {\r\n    postData: [\r\n        { id: 1, message: 'Hi, how are you?', likesCount: 0 },\r\n        { id: 2, message: \"It's my first post\", likesCount: 10 },\r\n        { id: 3, message: 'Lorem Ipsum is simply dummy text...', likesCount: 42 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return { ...state, postData: state.postData.filter((p) => p.id != action.postId) }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n})\r\nexport const deletePostActionCreator = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId\r\n})\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return { type: SET_USER_PROFILE, profile }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return { type: SET_STATUS, status }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n}\r\n\r\nexport default profileReducer\r\n\r\n// in response - result to resolve promise"]},"metadata":{},"sourceType":"module"}